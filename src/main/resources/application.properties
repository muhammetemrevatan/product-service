server.port=8089

#Loglama seviyesini root olarak ayarlad?k. Root olarak ayarlandigi icin uygulamanin tum modulleri icin gecerli olacak. debug olarak ayarlad?k buda uygulaman?n debug seviyesinde log kaydedecegi anlamina gelir. Tüm hatalar? ve mesajlar? ekranda gösterir.
#genelde böyle kullanilir.
# DEBUG -> DEBUG, INFO, WARN, ERROR gösterir.
# OFF   -> herhangi bir mesaj göstermez default budur.
# ERROR -> calisma sürecinde olusan HATA mesajlar?n? gösterir (SADECE ERROR)
# WARN  -> calisma sürecinde olusan UYARI mesajlar?n? gösterir (YAN? WARN VE ERROR LOGLARINI)
# INFO  -> INFO, WARN, ve ERROR gözükecekti.
# TRACE -> Calisma sürecinde olusan tüm bilgi mesajlar? (TRACE DEBUG WARN INFO ERROR ) hepsiniii.
logging.level.root=off
# sadece belirli bir paket icin olan debuglari calistirir.
logging.level.com.memrevatan=DEBUG

# uygulamanin adini girdigimiz annotation
spring.application.name=product-service

# third party spring supported kütüphanelerden kaynakli bean isim çakismasi olabiliyor. O yüzden spring'i bean cakismalarina yani overridin izin verecek sekilde ayarlamal?y?z.
spring.main.allow-bean-definition-overriding=true

# tamamen bilgi amacli eklenen bir property
info.component=Product Service

# proje ayarlar?n? harici bir yere tasimimamiza olanak saglar bu sekilde proeje ayarlar?n? rahatl?kla degistirebiliriz.
spring.cloud.config.uri=http://localhost:8888

#Validate veritaban?n? kontrol eder ama degisiklik yapmaz
#Create her seferinde onceki datalari silerek yeniden schema olusturur
#Create-Drop her session sonunda semayi drop ederdi.
#None database semasi ile ilgili hic bisey yapmayacaktir.
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.database-platform= org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.default_schema = stock_management

# veritabani olusturulurken yazilan komutlari gosterir.
#spring.jpa.show-sql=true

#---
# application.properties üzerinde olusturmus oldugumuz birden fazla dosya için hangisini kullanacagimizi belirtiyoruz.
#spring.profiles.active=localhost
# Postgre veritabani icin gerekli tanimlar
spring.datasource.url=jdbc:postgresql://localhost:5432/stock_management
spring.datasource.username=postgres
spring.datasource.password=admin



